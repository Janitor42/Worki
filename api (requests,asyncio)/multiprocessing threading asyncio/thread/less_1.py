# пример простой и понятной нам программы с вида работы потока

# for i in range(10):#цикл от 0 до 9
#     print(i) #исполняемая в консоль строчка с изменяемыми данными

# в данном случае поток видит for читает условие, заходит внутрь, делает строчку print(i), опять читает условие,
# когда условие for выполнится поток остановится - в программе больше ничего нет

# for one in range(1, 11):
#     one * 100_000 ** 345554
#     print('one', one)
# for two in range(1, 11):
#     two * 100_000 ** 345554
#     print('two', two)

# оба этих for стандартно отработали как один за другим


# теперь сделаем для них 2 потока
# import threading  # Импортируем модуль для работы с потоками
#
# def go_two():  # Функция, которая будет выполняться в отдельном потоке
#     for two in range(1, 11):  # Цикл от 1 до 10
#         print(f'two {two} ')  # Печатаем номер итерации
#         two * 100_000 ** 345554  # Тяжёлое вычисление (но результат нигде не используется)
#
# # Создаём поток, который будет выполнять функцию go_two
# go = threading.Thread(target=go_two)
# go.start()  # Запускаем поток
#
# # Главный поток продолжает выполнение
# for one in range(1, 11):  # Цикл от 1 до 10
#     print(f'one {one} ')  # Печатаем номер итерации
#     one * 100_000 ** 345554  # Тяжёлое вычисление (результат также не используется)
#в этой задаче мы видим что потоки выпоняются в какой то очереди (нам она не очевидна)
# смысл этой задачи показать что создавая несколько потоков мы отходим от привычной системы прочитал пошел дальше,
# а видим 2 или более потока

#если заменить на while true ничего не поменятеся (ниже пример)
# import threading  # Импортируем модуль для работы с потоками
#
# def go_two():  # Функция, которая будет выполняться в отдельном потоке
#     while True:  # Цикл от 1 до 10
#         print(f'two thread ')
#         5 * 100_000 ** 345554
#
# # Создаём поток, который будет выполнять функцию go_two
# go = threading.Thread(target=go_two)
# go.start()  # Запускаем поток
#
# # Главный поток продолжает выполнение
# while True:
#     print(f'one thread ')
#     5 * 100_000 ** 345554
#интерпретатор бесконечно путешествует между главным и 2 потоком и решает задачу и пишет принт





