import tkinter as tk

win = tk.Tk()
x='500'
y='500'
win.geometry(x+'x'+y)
win.config(background='black')



can=tk.Canvas(bg='white',width=int(x)-50,height=int(y)-50)#канвас
# bg / background: фоновый цвет
# bd / border: граница
# borderwidth: толщина границы
# cursor: курсор
# height: высота виджета
# width: ширина виджета
can.pack(expand=True)

# Для растяжения виджета применяется параметру expand передается значение True
# (или соответствующее число). Причем при отсутствии других параметров позиционирования значение expand=True
# позволяет поместить виджет по центру:
#


can.create_line(0,0,100,100)

# create_line(__x0: float, __y0: float, __x1: float, __y1: float)
# Параметры __x0 и __y0 представляют координаты начальной точки линии, а __x1 и __y1 - конечной.

#
# Кроме того у данного метода можно выделить ряд дополнительных параметров:
# arrow: помещает стрелку в начале линии (значение first), в конце (last) или на обоих концах (both)
# arrowshape: позволяет изменить форму стрелки
# joinstyle: управляет соединением сегметов линии. Принимает значения: round (по умолчанию), bevel и miter
# smooth: если значение "true" или "bezier", сглаживает сегменты линии
# splinesteps: управляет сглаживанием изогнутых линий

# can.create_line(0,300,300,0,arrow='both',arrowshape=(10,20,10))
a=can.create_line(0,300,300,0,capstyle="projecting",smooth='true')

# Параметры отрисовки
# Методы отрисовки имеют ряд параметров, которые позволяют настроить стилизацию фигур. Некоторые из этих параметров:
# fill: цвет заполнения фигуры
# width: ширина линий
# dash: устанавливает пунктирную линию
# stipple: устанавливает шаблон для заполнения фигуры (например, gray75, gray50, gray25, gray12)
# activefill: цвет заполнения фигуры при наведении курсора
# activewidth: ширина линий при наведении курсора
# activestipple: шаблон заполнения фигуры при наведении курсора

can.create_line(400,0,400,400,fill='red',width=5,activefill='black')

win.mainloop()